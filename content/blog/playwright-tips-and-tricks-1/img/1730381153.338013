<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Publish your playwright reports to github pages</title>
    <link rel="stylesheet" href="/assets/built/screen.css?v=d6f66aae46">

    <link rel="icon" href="https://res-2.cloudinary.com/dlvlme1cb/image/upload/q_auto/v1/ghost-blog-images/avatar1.jpg" type="image/jpeg">
    <link rel="canonical" href="https://blog.martioli.com/publish-your-playwright-reports-to-github-pages/">
    <meta name="referrer" content="no-referrer-when-downgrade">
    
    <meta property="og:site_name" content="Martioli">
    <meta property="og:type" content="article">
    <meta property="og:title" content="Publish your playwright reports to github pages">
    <meta property="og:description" content="What I am looking to achieve here is a free solution to have my reports published into separate sub-directories, accessible at an unique link that I can easily put in my Jira ticket, github issue or other test management tool, so I can show my client/manager/team what is">
    <meta property="og:url" content="https://blog.martioli.com/publish-your-playwright-reports-to-github-pages/">
    <meta property="og:image" content="https://images.unsplash.com/photo-1516321318423-f06f85e504b3?crop&#x3D;entropy&amp;cs&#x3D;tinysrgb&amp;fit&#x3D;max&amp;fm&#x3D;jpg&amp;ixid&#x3D;M3wxMTc3M3wwfDF8c2VhcmNofDd8fHJlcG9ydHN8ZW58MHx8fHwxNjk4ODMwMTkyfDA&amp;ixlib&#x3D;rb-4.0.3&amp;q&#x3D;80&amp;w&#x3D;2000">
    <meta property="article:published_time" content="2023-11-01T21:24:50.000Z">
    <meta property="article:modified_time" content="2024-01-16T19:17:33.000Z">
    <meta property="article:tag" content="Playwright">
    
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:title" content="Publish your playwright reports to github pages">
    <meta name="twitter:description" content="What I am looking to achieve here is a free solution to have my reports published into separate sub-directories, accessible at an unique link that I can easily put in my Jira ticket, github issue or other test management tool, so I can show my client/manager/team what is">
    <meta name="twitter:url" content="https://blog.martioli.com/publish-your-playwright-reports-to-github-pages/">
    <meta name="twitter:image" content="https://images.unsplash.com/photo-1516321318423-f06f85e504b3?crop&#x3D;entropy&amp;cs&#x3D;tinysrgb&amp;fit&#x3D;max&amp;fm&#x3D;jpg&amp;ixid&#x3D;M3wxMTc3M3wwfDF8c2VhcmNofDd8fHJlcG9ydHN8ZW58MHx8fHwxNjk4ODMwMTkyfDA&amp;ixlib&#x3D;rb-4.0.3&amp;q&#x3D;80&amp;w&#x3D;2000">
    <meta name="twitter:label1" content="Written by">
    <meta name="twitter:data1" content="Adrian Maciuc">
    <meta name="twitter:label2" content="Filed under">
    <meta name="twitter:data2" content="Playwright">
    <meta property="og:image:width" content="1200">
    <meta property="og:image:height" content="800">
    
    <script type="application/ld+json">
{
    "@context": "https://schema.org",
    "@type": "Article",
    "publisher": {
        "@type": "Organization",
        "name": "Martioli",
        "url": "https://blog.martioli.com/",
        "logo": {
            "@type": "ImageObject",
            "url": "https://res-2.cloudinary.com/dlvlme1cb/image/upload/q_auto/v1/ghost-blog-images/avatar1.jpg",
            "width": 60,
            "height": 60
        }
    },
    "author": {
        "@type": "Person",
        "name": "Adrian Maciuc",
        "image": {
            "@type": "ImageObject",
            "url": "https://blog.martioli.com/content/images/2024/01/adi-profile.jpg",
            "width": 1200,
            "height": 1265
        },
        "url": "https://blog.martioli.com/author/adrian/",
        "sameAs": [
            "http://www.martioli.com"
        ]
    },
    "headline": "Publish your playwright reports to github pages",
    "url": "https://blog.martioli.com/publish-your-playwright-reports-to-github-pages/",
    "datePublished": "2023-11-01T21:24:50.000Z",
    "dateModified": "2024-01-16T19:17:33.000Z",
    "image": {
        "@type": "ImageObject",
        "url": "https://images.unsplash.com/photo-1516321318423-f06f85e504b3?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=M3wxMTc3M3wwfDF8c2VhcmNofDd8fHJlcG9ydHN8ZW58MHx8fHwxNjk4ODMwMTkyfDA&ixlib=rb-4.0.3&q=80&w=2000",
        "width": 1200,
        "height": 800
    },
    "keywords": "Playwright",
    "description": "What I am looking to achieve here is a free solution to have my reports published into separate sub-directories, accessible at an unique link that I can easily put in my Jira ticket, github issue or other test management tool, so I can show my client/manager/team what is the status of our test runs, for maybe regressions or other circumstances. A place where I can easily see the screenshots and even see the trace files of playwright without the need to ever download anything. Yes, you have read ",
    "mainEntityOfPage": "https://blog.martioli.com/publish-your-playwright-reports-to-github-pages/"
}
    </script>

    <meta name="generator" content="Ghost 5.75">
    <link rel="alternate" type="application/rss+xml" title="Martioli" href="https://blog.martioli.com/rss/">
    <script defer src="https://cdn.jsdelivr.net/ghost/portal@~2.36/umd/portal.min.js" data-i18n="true" data-ghost="https://blog.martioli.com/" data-key="0781da3423523aaff7fa49a578" data-api="https://blog.martioli.com/ghost/api/content/" crossorigin="anonymous"></script><style id="gh-members-styles">.gh-post-upgrade-cta-content,
.gh-post-upgrade-cta {
    display: flex;
    flex-direction: column;
    align-items: center;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    text-align: center;
    width: 100%;
    color: #ffffff;
    font-size: 16px;
}

.gh-post-upgrade-cta-content {
    border-radius: 8px;
    padding: 40px 4vw;
}

.gh-post-upgrade-cta h2 {
    color: #ffffff;
    font-size: 28px;
    letter-spacing: -0.2px;
    margin: 0;
    padding: 0;
}

.gh-post-upgrade-cta p {
    margin: 20px 0 0;
    padding: 0;
}

.gh-post-upgrade-cta small {
    font-size: 16px;
    letter-spacing: -0.2px;
}

.gh-post-upgrade-cta a {
    color: #ffffff;
    cursor: pointer;
    font-weight: 500;
    box-shadow: none;
    text-decoration: underline;
}

.gh-post-upgrade-cta a:hover {
    color: #ffffff;
    opacity: 0.8;
    box-shadow: none;
    text-decoration: underline;
}

.gh-post-upgrade-cta a.gh-btn {
    display: block;
    background: #ffffff;
    text-decoration: none;
    margin: 28px 0 0;
    padding: 8px 18px;
    border-radius: 4px;
    font-size: 16px;
    font-weight: 600;
}

.gh-post-upgrade-cta a.gh-btn:hover {
    opacity: 0.92;
}</style>
    <script defer src="https://cdn.jsdelivr.net/ghost/sodo-search@~1.1/umd/sodo-search.min.js" data-key="0781da3423523aaff7fa49a578" data-styles="https://cdn.jsdelivr.net/ghost/sodo-search@~1.1/umd/main.css" data-sodo-search="https://blog.martioli.com/" crossorigin="anonymous"></script>
    
    <link href="https://blog.martioli.com/webmentions/receive/" rel="webmention">
    <script defer src="/public/cards.min.js?v=d6f66aae46"></script>
    <link rel="stylesheet" type="text/css" href="/public/cards.min.css?v=d6f66aae46">
    <script defer src="/public/comment-counts.min.js?v=d6f66aae46" data-ghost-comments-counts-api="https://blog.martioli.com/members/api/comments/counts/"></script>
    <script defer src="/public/member-attribution.min.js?v=d6f66aae46"></script>
    <!-- remove rss from page view -->
<style>
    a.icon.fa-rss {
        display:none;
    }
</style>

<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-D6X7JZL8L2"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-D6X7JZL8L2');
</script>

<!-- piwik pro statistics -->
<script type="text/javascript">
(function(window, document, dataLayerName, id) {
window[dataLayerName]=window[dataLayerName]||[],window[dataLayerName].push({start:(new Date).getTime(),event:"stg.start"});var scripts=document.getElementsByTagName('script')[0],tags=document.createElement('script');
function stgCreateCookie(a,b,c){var d="";if(c){var e=new Date;e.setTime(e.getTime()+24*c*60*60*1e3),d="; expires="+e.toUTCString()}document.cookie=a+"="+b+d+"; path=/"}
var isStgDebug=(window.location.href.match("stg_debug")||document.cookie.match("stg_debug"))&&!window.location.href.match("stg_disable_debug");stgCreateCookie("stg_debug",isStgDebug?1:"",isStgDebug?14:-1);
var qP=[];dataLayerName!=="dataLayer"&&qP.push("data_layer_name="+dataLayerName),isStgDebug&&qP.push("stg_debug");var qPString=qP.length>0?("?"+qP.join("&")):"";
tags.async=!0,tags.src="https://martioli.containers.piwik.pro/"+id+".js"+qPString,scripts.parentNode.insertBefore(tags,scripts);
!function(a,n,i){a[n]=a[n]||{};for(var c=0;c<i.length;c++)!function(i){a[n][i]=a[n][i]||{},a[n][i].api=a[n][i].api||function(){var a=[].slice.call(arguments,0);"string"==typeof a[0]&&window[dataLayerName].push({event:n+"."+i+":"+a[0],parameters:[].slice.call(arguments,1)})}}(i[c])}(window,"ppms",["tm","cm"]);
})(window, document, 'dataLayer', '916e2516-9978-4a19-9683-5b0742a8e583');
</script>

<!-- clap button -->
<script src="https://unpkg.com/applause-button/dist/applause-button.js"></script>
<link rel="stylesheet" href="https://unpkg.com/applause-button/dist/applause-button.css">

<!-- cloudflare -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.28.0/themes/prism-tomorrow.min.css" integrity="sha512-vswe+cgvic/XBoF1OcM/TeJ2FW0OofqAVdCZiEYkd6dwGXthvkSFWOoGGJgS2CW70VK5dQM5Oh+7ne47s74VTg==" crossorigin="anonymous" referrerpolicy="no-referrer" />

<!-- umami statistics -->
<script defer src="https://analytics.eu.umami.is/script.js" data-website-id="9c978255-e564-40a5-b899-1ad13a6b2d0e"></script>
<script defer src="https://eu.umami.is/script.js" data-website-id="015ece7c-520d-4c07-af21-13d4d1102edc"></script>
<style>:root {--ghost-accent-color: #00a388;}</style>
</head>

<body class="post-template tag-playwright tag-hash-import-2024-01-14-20-07 is-head-stacked has-serif-body">
<div class="gh-site">

    <header id="gh-head" class="gh-head gh-outer">
        <div class="gh-head-inner gh-inner">
            <div class="gh-head-brand">
                <div class="gh-head-brand-wrapper">
                    
                    <a class="gh-head-logo" href="https://blog.martioli.com">
                            Martioli
                    </a>
                    
                </div>
                <button class="gh-search gh-icon-btn" aria-label="Search this site" data-ghost-search><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2" width="20" height="20"><path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path></svg></button>
                <button class="gh-burger"></button>
            </div>

            <nav class="gh-head-menu">
                <ul class="nav">
    <li class="nav-home"><a href="https://blog.martioli.com/">Home</a></li>
    <li class="nav-about"><a href="https://blog.martioli.com/about/">About</a></li>
    <li class="nav-more-cypress"><a href="https://blog.martioli.com/tag/cypress/">More Cypress</a></li>
    <li class="nav-more-playwright"><a href="https://blog.martioli.com/tag/playwright/">More Playwright</a></li>
    <li class="nav-recommended-resources"><a href="https://blog.martioli.com/#/portal/recommendations">Recommended Resources</a></li>
</ul>

            </nav>

            <div class="gh-head-actions">
                    <button class="gh-search gh-icon-btn" aria-label="Search this site" data-ghost-search><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2" width="20" height="20"><path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path></svg></button>
                    <div class="gh-head-members">
                                <a class="gh-head-link" href="#/portal/signin" data-portal="signin">Sign in</a>
                                <a class="gh-head-btn gh-btn gh-primary-btn" href="#/portal/signup" data-portal="signup">Subscribe</a>
                    </div>
            </div>
        </div>
    </header>

    
<main class="gh-main">
        <article class="gh-article post tag-playwright tag-hash-import-2024-01-14-20-07">

            <header class="gh-article-header gh-canvas">
                    <a class="gh-article-tag" href="https://blog.martioli.com/tag/playwright/">Playwright</a>

                <h1 class="gh-article-title">Publish your playwright reports to github pages</h1>

                    <aside class="gh-article-sidebar">

        <div class="gh-author-image-list">
                <a class="gh-author-image" href="/author/adrian/">
                        <img src="https://blog.martioli.com/content/images/2024/01/adi-profile.jpg" alt="Adrian Maciuc">
                </a>
        </div>

        <div class="gh-author-name-list">
                <h4 class="gh-author-name">
                    <a href="/author/adrian/">Adrian Maciuc</a>
                </h4>
                
        </div>

        <div class="gh-article-meta">
            <div class="gh-article-meta-inner">
                <time class="gh-article-date" datetime="2023-11-02">Nov 2, 2023</time>
                    <span class="gh-article-meta-sep"></span>
                    <span class="gh-article-length">11 min</span>
            </div>
        </div>

    </aside>


                    <figure class="gh-article-image">
        <img
            srcset="https://images.unsplash.com/photo-1516321318423-f06f85e504b3?crop&#x3D;entropy&amp;cs&#x3D;tinysrgb&amp;fit&#x3D;max&amp;fm&#x3D;jpg&amp;ixid&#x3D;M3wxMTc3M3wwfDF8c2VhcmNofDd8fHJlcG9ydHN8ZW58MHx8fHwxNjk4ODMwMTkyfDA&amp;ixlib&#x3D;rb-4.0.3&amp;q&#x3D;80&amp;w&#x3D;300 300w,
                    https://images.unsplash.com/photo-1516321318423-f06f85e504b3?crop&#x3D;entropy&amp;cs&#x3D;tinysrgb&amp;fit&#x3D;max&amp;fm&#x3D;jpg&amp;ixid&#x3D;M3wxMTc3M3wwfDF8c2VhcmNofDd8fHJlcG9ydHN8ZW58MHx8fHwxNjk4ODMwMTkyfDA&amp;ixlib&#x3D;rb-4.0.3&amp;q&#x3D;80&amp;w&#x3D;720 720w,
                    https://images.unsplash.com/photo-1516321318423-f06f85e504b3?crop&#x3D;entropy&amp;cs&#x3D;tinysrgb&amp;fit&#x3D;max&amp;fm&#x3D;jpg&amp;ixid&#x3D;M3wxMTc3M3wwfDF8c2VhcmNofDd8fHJlcG9ydHN8ZW58MHx8fHwxNjk4ODMwMTkyfDA&amp;ixlib&#x3D;rb-4.0.3&amp;q&#x3D;80&amp;w&#x3D;960 960w,
                    https://images.unsplash.com/photo-1516321318423-f06f85e504b3?crop&#x3D;entropy&amp;cs&#x3D;tinysrgb&amp;fit&#x3D;max&amp;fm&#x3D;jpg&amp;ixid&#x3D;M3wxMTc3M3wwfDF8c2VhcmNofDd8fHJlcG9ydHN8ZW58MHx8fHwxNjk4ODMwMTkyfDA&amp;ixlib&#x3D;rb-4.0.3&amp;q&#x3D;80&amp;w&#x3D;1200 1200w,
                    https://images.unsplash.com/photo-1516321318423-f06f85e504b3?crop&#x3D;entropy&amp;cs&#x3D;tinysrgb&amp;fit&#x3D;max&amp;fm&#x3D;jpg&amp;ixid&#x3D;M3wxMTc3M3wwfDF8c2VhcmNofDd8fHJlcG9ydHN8ZW58MHx8fHwxNjk4ODMwMTkyfDA&amp;ixlib&#x3D;rb-4.0.3&amp;q&#x3D;80&amp;w&#x3D;2000 2000w"
            sizes="(max-width: 1200px) 100vw, 1200px"
            src="https://images.unsplash.com/photo-1516321318423-f06f85e504b3?crop&#x3D;entropy&amp;cs&#x3D;tinysrgb&amp;fit&#x3D;max&amp;fm&#x3D;jpg&amp;ixid&#x3D;M3wxMTc3M3wwfDF8c2VhcmNofDd8fHJlcG9ydHN8ZW58MHx8fHwxNjk4ODMwMTkyfDA&amp;ixlib&#x3D;rb-4.0.3&amp;q&#x3D;80&amp;w&#x3D;1200"
            alt="Publish your playwright reports to github pages"
        >
            <figcaption><span style="white-space: pre-wrap;">Photo by </span><a href="https://unsplash.com/@johnschno?utm_source=ghost&amp;utm_medium=referral&amp;utm_campaign=api-credit"><span style="white-space: pre-wrap;">John Schnobrich</span></a><span style="white-space: pre-wrap;"> / </span><a href="https://unsplash.com/?utm_source=ghost&amp;utm_medium=referral&amp;utm_campaign=api-credit"><span style="white-space: pre-wrap;">Unsplash</span></a></figcaption>
    </figure>
            </header>

            <section class="gh-content gh-canvas">
                <p></p><p>What I am looking to achieve here is a <strong>free </strong>solution to have my reports published into separate sub-directories, accessible at an unique link that I can easily put in my Jira ticket, github issue or other test management tool, so I can show my client/manager/team what is the status of our test runs, for maybe regressions or other circumstances. A place where I can easily see the screenshots and even see the <a href="https://playwright.dev/docs/trace-viewer?ref=blog.martioli.com">trace files of playwright</a> without the need to ever download anything. Yes, you have read that right, I am not downloading any artifact <strong>trace.zip</strong> file, I can have the trace viewer working directly on the published page. </p><p>On top of all of that because I have a lot of tests, I want to use the <a href="https://playwright.dev/docs/test-sharding?ref=blog.martioli.com">sharding functionality of playwright</a>, for a full parallelisation experience, and merge all blob reports into one. And because storage is always expensive and there are limits, I want to keep records only for the last N set days.</p><blockquote>So, how do I publish my playwright reports into separate subdirectories on github pages, using blob reports </blockquote><p></p><p>I  have created this github action workflow</p><p>My workflow will do the followings :</p><ol><li>On each push/PR, workflow <code>Playwright-Tests</code> will run</li><li>Tests will run in full parallel <a href="https://playwright.dev/docs/test-sharding?ref=blog.martioli.com" rel="nofollow">using sharding</a></li><li>Each machine will create a report, and it will be uploaded to artifacts</li><li>A second job will download all artifacts, use <a href="https://playwright.dev/docs/test-sharding?ref=blog.martioli.com#merging-reports-from-multiple-shards" rel="nofollow">playwright merge-reports</a> and create one single html report</li><li>An action will run that will push each report into github pages</li><li>Each report will have its own subdirectory to avoid overwriting reports (eg. : <code>username.github.io/name_of_repo/20231129_000203Z</code>)</li><li>A script will run periodically or manually triggered that will erase reports older than a set amount of time</li></ol><p>Here is how the yaml file starts:</p><figure class="kg-card kg-image-card"><a href="https://res-2.cloudinary.com/dlvlme1cb/image/upload/q_auto/v1/ghost-blog-images/yaml_playwright1.png?ref=blog.martioli.com"><img src="https://res-2.cloudinary.com/dlvlme1cb/image/upload/q_auto/v1/ghost-blog-images/yaml_playwright1.png" class="kg-image" alt loading="lazy" width="1098" height="749"></a></figure><p>First part until line 9 is standard for workflow to be triggered upon push or pull request. </p><p>First job, named <code>setup-and-run-tests</code> will use a matrix for <a href="https://playwright.dev/docs/test-sharding?ref=blog.martioli.com">sharding</a>. Do the matrix as you please. You want 4 then do <code>[1/4, 2/4, 3/4, 4/4]</code> . You know best your number of tests and how much you need to set this up. By the way, one of my favorite authors that I follow to learn new tricks with playwright is <a href="https://www.linkedin.com/in/butchmayhew/?ref=blog.martioli.com">Butch Mayhew</a>, and he wrote an article on how to find out what is the <a href="https://playwrightsolutions.com/whats-an-easy-way-to-tell-how-many-workers/?ref=blog.martioli.com">optimum settings for parallelisation</a> on your machines. Do check it out.</p><figure class="kg-card kg-image-card"><a href="https://res-3.cloudinary.com/dlvlme1cb/image/upload/q_auto/v1/ghost-blog-images/yaml_playwright2.png?ref=blog.martioli.com"><img src="https://res-3.cloudinary.com/dlvlme1cb/image/upload/q_auto/v1/ghost-blog-images/yaml_playwright2.png" class="kg-image" alt loading="lazy" width="1100" height="633"></a></figure><p>First job will end at line 41 and it will upload the blob reports from all the machines into artifacts.</p><p>Our second job <code>merge-reports-and-upload</code>, will start with setting up a <code>timestamp</code> key. Why we need this? Three reasons:</p><ol><li>Because we are going to need to find a way to have a unique ID for each report and the best way to do that is to use a timestamp. </li><li>Second reason is that we have to later differentiate these reports by date. Because we are going to do cleanup, and we want to keep history only for the last N days. </li><li>We are going to use this timestamp format to build a folder where we keep our report which will be then published at a subdirectory with the same name. To have a perfect link that you can share for your<strong> jira tickets </strong>or <strong>github issues</strong>, or even show it to your <strong>client</strong>. An example of the final url will be like this : <code>https://username.github.io/name-of-repo/20231129_000203Z/</code></li></ol><figure class="kg-card kg-image-card"><a href="https://res-2.cloudinary.com/dlvlme1cb/image/upload/q_auto/v1/ghost-blog-images/yaml_playwright3.png?ref=blog.martioli.com"><img src="https://res-2.cloudinary.com/dlvlme1cb/image/upload/q_auto/v1/ghost-blog-images/yaml_playwright3.png" class="kg-image" alt loading="lazy" width="1262" height="602"></a></figure><p>We then install dependencies, because we need playwright to merge our reports after it downloads all of the blob reports from previous job.</p><p>Playwright <a href="https://playwright.dev/docs/test-sharding?ref=blog.martioli.com#merging-reports-from-multiple-shards">merge-reports</a> will create a folder ./playwright-report containing the final single report.</p><p>We will [optionally] upload the final report to artifacts.</p><figure class="kg-card kg-image-card"><a href="https://res-1.cloudinary.com/dlvlme1cb/image/upload/q_auto/v1/ghost-blog-images/yaml_playwright4.png?ref=blog.martioli.com"><img src="https://res-1.cloudinary.com/dlvlme1cb/image/upload/q_auto/v1/ghost-blog-images/yaml_playwright4.png" class="kg-image" alt loading="lazy" width="1448" height="339"></a></figure><p>We are going to use <a href="https://github.com/marketplace/actions/github-pages-action?ref=blog.martioli.com">peaceiris </a>action, to publish our report into a separate subfolder with the param destination_dir</p><p>And in the end for a nice UX, we are going to publish in the summary part of github actions, the final URL where the report can be seen on github pages.</p><p>You have to perform some configurations at your github repo settings for everything to work. </p><p>First go to your repos Settings - Actions - General - choose allow for the github token.</p><figure class="kg-card kg-image-card"><a href="https://res-4.cloudinary.com/dlvlme1cb/image/upload/q_auto/v1/ghost-blog-images/worfklow_permision.png?ref=blog.martioli.com"><img src="https://res-4.cloudinary.com/dlvlme1cb/image/upload/q_auto/v1/ghost-blog-images/worfklow_permision.png" class="kg-image" alt loading="lazy" width="775" height="317"></a></figure><p>Now run the workflow. First time when peaceiris action will run you will <strong>not have a succesful run</strong>, because it first creates a branch called <code>gh-pages</code> and you then set to select that branch to be used for github pages. Go to settings - Pages and have it look like this</p><figure class="kg-card kg-image-card"><a href="https://res-1.cloudinary.com/dlvlme1cb/image/upload/q_auto/v1/ghost-blog-images/gh-pages.png?ref=blog.martioli.com"><img src="https://res-1.cloudinary.com/dlvlme1cb/image/upload/q_auto/v1/ghost-blog-images/gh-pages.png" class="kg-image" alt loading="lazy" width="1067" height="469"></a></figure><p>The second time when you run, it will work.</p><hr><h3 id="now-for-the-cleaning-up-part-of-these-reports-things-start-to-become-a-bit-more-complicated-than-i-hoped">Now for the cleaning up part of these reports, things start to become a bit more complicated than I hoped</h3><p></p><p>I really would love to see something more simple at this part. Please hit me up <a href="https://www.linkedin.com/in/adrian-maciuc/?ref=blog.martioli.com">on linkedin</a> if you ever find something more simple than this, but, until then, here is how I do it.</p><p>First we need to understand what peaceiris github action does. This is very important.</p><p>The action will create a separate branch called <code>gh-pages</code>. And it will push into this branch only our files from the report, keeping the rest of the codebase separate.</p><p>Then it will use a <code>github_token</code> which is created per workflow run, and use it to push those files into github pages. Remember when I asked above to allow read and write permissions. Well this is the reason.</p><p>Github pages will render by default any folder that contains a file called <code>index.html</code>. Since our reports is a folder with <code>index.html</code> and the necessary data folders, thats all it needs. Remember we put the reports in folders with name 20231129_000203Z , so github pages will render them per name at <code>https://username.github.io/name-of-repo/name-of-folder-that-has-index-html/</code></p><hr><p>Moving forward. I have <a href="https://github.com/adrianmaciuc/rm_old_folders?ref=blog.martioli.com">written a script</a> that we will use to do the cleanup but it needs to be only in the <code>gh-pages</code> branch to be next to our reports. </p><blockquote>How do I git clone only one branch and see only those files ? </blockquote><p>You create a separate folder <strong>away from your initial git repo</strong> on your local machine, and using git you fetch only that branch and those files with the command</p><pre><code>git clone --branch &lt;branchname&gt; --single-branch &lt;remote-repo-url&gt;</code></pre><p>This allows you to only fetch files from the specified branch without fetching other branches. Now, when you enter into this local repo branch, you will notice that you do not even have main or master, you are directly into <code>gh-pages</code> branch. You put here the script that I have built. You can <a href="https://raw.githubusercontent.com/adrianmaciuc/rm_old_folders/main/rm_old_folders.py?ref=blog.martioli.com">download it from here</a>. Once that is done push the changes into the gh-pages branch</p><pre><code>git push origin gh-pages</code></pre><hr><h3 id="to-sum-up-key-points-here">To sum up key points here </h3><p></p><ol><li>Reports and other files related to reports are kept on a separate branch</li><li>You can have a local repo that deals only with the reports</li><li>The script that deletes files is only in the reports branch to have everything clear.</li></ol><p></p><h3 id="lets-see-how-we-manually-trigger-a-delete-workflow-to-do-a-cleanup-on-our-old-reports">Lets see how we manually trigger a delete workflow to do a cleanup on our old reports</h3><p></p><p>We will create a new yaml file, and it looks like this</p><pre><code class="language-yaml">name: Delete old folders from github pages

on:
  workflow_dispatch:
    inputs:
        n_days:
            description: 'Number of days to determine which folders to delete. Example: 10 will delete all folders older than 10 days'
            required: true
            default: 10
        folder_name:
            description: 'Name of the folder where you store the reports. Default is root'
            required: true
            default: '.'

jobs:
  delete_old_folders:
    runs-on: ubuntu-latest
    permissions:
        contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with: 
          ref: gh-pages

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Pray then Run the script
        run: python rm_old_folders.py --n-days ${{ github.event.inputs.n_days }} --folder-name ${{ github.event.inputs.folder_name }}

      - name: Commit all changed files back to the repository
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: gh-pages
          commit_message: Delete folders older than ${{ github.event.inputs.n_days }} days</code></pre><p></p><p>What this does is the <code>workflow_dispatch</code> sets up the ability to trigger this workflow manually, from the ACTIONS tab in github. And it takes two inputs:</p><ol><li>First is the number of days to determine which folders to delete. Example: 10 will delete all folders older than 10 days</li><li>Second is name of the folder where you store the reports. Default is root. Leave the dot there and you are fine. However if you decide one day to store the reports in a separate folder, then give it that folder name.</li></ol><p>Then you give it <code>permissions</code> to <code>contents: write</code> . Meaning that it downloads the files from the <code>gh-pages</code> branch, cleans them up and pushes the changes with a commit back to remote repo.</p><p>It installs python to run the script, the script will clean up the files. And then <a href="https://github.com/marketplace/actions/git-auto-commit?ref=blog.martioli.com">stefanzweifel famous github action</a> will push the changes back to the repo.</p><p><strong>The ridiculous </strong>part of all of this is that if you want to run this workflow manually, you must have the same yaml file in both branches, in your main or master and also into your gh-pages . So make sure this yaml file is in both branches main or master and also in <code>gh-pages</code> , stored of course in the folder <code>.github/workflows</code> . If you really want to know why, well the reason is that when you go to ACTIONS tab in github, you will see a list of workflows, and that list is populated based on the workflows you have created on your main or master branch. So, even if we need it only in <code>gh-pages</code> branch, there is no other way to visually see it on actions tab (or at least a way that I am aware of)</p><p>Now how do I run this workflow manually?</p><p>You go to github, go to ACTIONS tab. Select <code>Delete old folders from github pages</code> workflow and then go to the right side and click on RUN WORKFLOW. This will open a dropdown. </p><figure class="kg-card kg-image-card"><a href="https://res-5.cloudinary.com/dlvlme1cb/image/upload/q_auto/v1/ghost-blog-images/run-workflow.png?ref=blog.martioli.com"><img src="https://res-5.cloudinary.com/dlvlme1cb/image/upload/q_auto/v1/ghost-blog-images/run-workflow.png" class="kg-image" alt loading="lazy" width="380" height="405"></a></figure><p>Very <strong>important here</strong> is to change to <code>branch: gh-pages</code> . If you run this on main or master it will not do anything. So it should be like this</p><figure class="kg-card kg-image-card"><a href="https://res-4.cloudinary.com/dlvlme1cb/image/upload/q_auto/v1/ghost-blog-images/run-workflow2.png?ref=blog.martioli.com"><img src="https://res-4.cloudinary.com/dlvlme1cb/image/upload/q_auto/v1/ghost-blog-images/run-workflow2.png" class="kg-image" alt loading="lazy" width="369" height="410"></a></figure><p></p><p>Setup the days you want and click RUN workflow blue button.</p><p></p><p>Here is the full yaml code for playwright tests :</p><pre><code class="language-yaml">name: Playwright-Tests
on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  setup-and-run-tests:
    # setup and run the tests in parallel machines, with each machine uploading its own results to artifacts
    # artifacts are shared among jobs and machines
    timeout-minutes: 15
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shard: [1/2, 2/2]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 18
    - name: Install dependencies
      run: npm ci

    - name: Install Playwright browsers
      run: npx playwright install --with-deps

    - name: Run Playwright tests
      run: npx playwright test --shard ${{ matrix.shard }}

    # Once playwright finishes it will create a folder called 'blob-report' where it will put all the reports
    - name: Upload blob report to GitHub Actions Artifacts
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: merged-reports-as-blob # name of the file you want to have once its uploaded
        path: blob-report # path where the reports are, from where to take the files. 
        retention-days: 14


  merge-reports-and-upload:
    # Merge reports after playwright tests, even if some shards have failed
    if: always()
    needs: [setup-and-run-tests]
    runs-on: ubuntu-latest

    outputs:
        timestamp: ${{ steps.timestampid.outputs.timestamp }}

    steps:

    # We want a unique identifier to be used when we create subdirectories for our github pages with reports
    - name: Set a timestamp
      id: timestampid
      # this will store current time with UTC in outputs.timestamp (eg of value: 20231028_233147Z)
      run: echo "timestamp=$(date --utc +%Y%m%d_%H%M%SZ)" &gt;&gt; "$GITHUB_OUTPUT" 

    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 18
    - name: Install dependencies
      run: npm ci

    # we now download the reports uploaded previously to merge them and create one single html report
    - name: Download blob reports from GitHub Actions Artifacts
      uses: actions/download-artifact@v3
      with:
        name: merged-reports-as-blob # name of the file stored as artifact (as uploaded at the previous job)
        path: downloaded-merged-reports-as-blob # name of the folder where the download will be saved

    # Playwright will generate a report and store it inside a folder called '/playwright-report'
    - name: Merge the blobs into one single HTML Report
      run: npx playwright merge-reports --reporter html ./downloaded-merged-reports-as-blob

    - name: /[OPTIONAL] Upload full html report to artifacts for history
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: playwright-report-${{ steps.timestampid.outputs.timestamp }} # name of the file you want to have once its uploaded
        path: playwright-report # path where the reports are, from where to take the files
        retention-days: 14

    - name: Push the new files to github pages
    # This will create a separate branch called gh-pages where it will store only reports. And from where it will push all future changes 
    # to github pages. Having a separate branch will keep the reports and changes commits separate to your main/master
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./playwright-report # from what folder to take files. It takes only contents
        destination_dir: ${{ steps.timestampid.outputs.timestamp }} # a sub-directory where to publish to avoid overwriting other reports
        
    - name: Write URL in summary
      run: echo "### Test results (link available after 20 secs) - https://${{ github.repository_owner }}.github.io/playwright-example-with-typescript/${{ steps.timestampid.outputs.timestamp }}/" &gt;&gt; $GITHUB_STEP_SUMMARY
</code></pre><p></p><p>Full yaml code for the remove old folders</p><pre><code class="language-yaml">name: Delete old folders from github pages

on:
  workflow_dispatch:
    inputs:
        n_days:
            description: 'Number of days to determine which folders to delete. Example: 10 will delete all folders older than 10 days'
            required: true
            default: 10
        folder_name:
            description: 'Name of the folder where you store the reports. Default is root'
            required: true
            default: '.'

jobs:
  delete_old_folders:
    runs-on: ubuntu-latest
    permissions:
        contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with: 
          ref: gh-pages

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Pray then Run the script
        run: python rm_old_folders.py --n-days ${{ github.event.inputs.n_days }} --folder-name ${{ github.event.inputs.folder_name }}

      - name: Commit all changed files back to the repository
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: gh-pages
          commit_message: Delete folders older than ${{ github.event.inputs.n_days }} days</code></pre><hr><p>Here are some limitations that you should be aware of:</p><ol><li>Github Pages can store <a href="https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages?ref=blog.martioli.com#usage-limits">up to 1 GB</a> of storage</li><li>GitHub Pages sites have a <em>soft</em> bandwidth limit of 100 GB per month</li><li>You can (not recommended) push the limits of<a href="https://docs.github.com/en/repositories/working-with-files/managing-large-files/about-large-files-on-github?ref=blog.martioli.com#repository-size-limits"> storage up to 5 GB</a></li><li>Remember that we optionally uploaded our reports into artifacts. You can use that as optional backup but there is a<a href="https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration?ref=blog.martioli.com#artifact-and-log-retention-policy"> limit of 90 Days</a> retention for free users, and 400 days for enterprise. <a href="https://docs.github.com/en/billing/managing-billing-for-github-actions/managing-your-spending-limit-for-github-actions?ref=blog.martioli.com">Storage limit</a> is 2 GB for free users. And different values based on your premium subscription.</li><li>I have not covered the artifacts detail in this post but do keep in mind that if you reach the size limit your builds will start to fail. You can easily find ways to delete old artifacts, <a href="https://poweruser.blog/storage-housekeeping-on-github-actions-e2997b5b23d1?ref=blog.martioli.com">here is a quick example</a> .</li></ol><p></p><p>Hit the clap button if you found this useful. Or even <a href="https://ko-fi.com/adrianmaciuc?ref=blog.martioli.com">buy me a coffee</a> if you want to motivate me even more.</p>
<!--kg-card-begin: html-->
<applause-button style="width: 58px; height: 58px" color="#3f9dff"></applause-button>
<!--kg-card-end: html-->
<figure class="kg-card kg-bookmark-card"><a class="kg-bookmark-container" href="https://blog.martioli.com/playwright-tips-and-tricks-1/"><div class="kg-bookmark-content"><div class="kg-bookmark-title">Playwright tips and tricks #1</div><div class="kg-bookmark-description">Common errors, data test id hacks, auto-waits, timeouts hack, asserting an array of strings, absence of an element and many more</div><div class="kg-bookmark-metadata"><img class="kg-bookmark-icon" src="https://res-2.cloudinary.com/dlvlme1cb/image/upload/q_auto/v1/ghost-blog-images/avatar1.jpg" alt><span class="kg-bookmark-author">Martioli</span><span class="kg-bookmark-publisher">Adrian Maciuc</span></div></div><div class="kg-bookmark-thumbnail"><img src="https://images.unsplash.com/photo-1597484661643-2f5fef640dd1?crop=entropy&amp;cs=tinysrgb&amp;fit=max&amp;fm=jpg&amp;ixid=M3wxMTc3M3wwfDF8c2VhcmNofDR8fHRvb2xzfGVufDB8fHx8MTcwMTk4NjgzMHww&amp;ixlib=rb-4.0.3&amp;q=80&amp;w=2000" alt></div></a></figure><div class="kg-card kg-button-card kg-align-center"><a href="#/portal/signup/free" class="kg-btn kg-btn-accent">Subscribe for more...</a></div>
            </section>

        </article>

                <div class="gh-read-next gh-canvas">
                <section class="gh-pagehead">
                    <h4 class="gh-pagehead-title">Read next</h4>
                </section>

                <div class="gh-topic gh-topic-grid">
                    <div class="gh-topic-content">
                            <article class="gh-card post featured">
    <a class="gh-card-link" href="/playwright-tips-and-tricks-2/">
            <figure class="gh-card-image">
                <img
                    srcset="https://images.unsplash.com/photo-1648545120788-6c0220422b27?crop&#x3D;entropy&amp;cs&#x3D;tinysrgb&amp;fit&#x3D;max&amp;fm&#x3D;jpg&amp;ixid&#x3D;M3wxMTc3M3wwfDF8c2VhcmNofDQ4fHxmbG93ZXJzJTIwZGlnaXRhbHxlbnwwfHx8fDE3MDQyOTUyMjJ8MA&amp;ixlib&#x3D;rb-4.0.3&amp;q&#x3D;80&amp;w&#x3D;300 300w,
                            https://images.unsplash.com/photo-1648545120788-6c0220422b27?crop&#x3D;entropy&amp;cs&#x3D;tinysrgb&amp;fit&#x3D;max&amp;fm&#x3D;jpg&amp;ixid&#x3D;M3wxMTc3M3wwfDF8c2VhcmNofDQ4fHxmbG93ZXJzJTIwZGlnaXRhbHxlbnwwfHx8fDE3MDQyOTUyMjJ8MA&amp;ixlib&#x3D;rb-4.0.3&amp;q&#x3D;80&amp;w&#x3D;720 720w,
                            https://images.unsplash.com/photo-1648545120788-6c0220422b27?crop&#x3D;entropy&amp;cs&#x3D;tinysrgb&amp;fit&#x3D;max&amp;fm&#x3D;jpg&amp;ixid&#x3D;M3wxMTc3M3wwfDF8c2VhcmNofDQ4fHxmbG93ZXJzJTIwZGlnaXRhbHxlbnwwfHx8fDE3MDQyOTUyMjJ8MA&amp;ixlib&#x3D;rb-4.0.3&amp;q&#x3D;80&amp;w&#x3D;960 960w,
                            https://images.unsplash.com/photo-1648545120788-6c0220422b27?crop&#x3D;entropy&amp;cs&#x3D;tinysrgb&amp;fit&#x3D;max&amp;fm&#x3D;jpg&amp;ixid&#x3D;M3wxMTc3M3wwfDF8c2VhcmNofDQ4fHxmbG93ZXJzJTIwZGlnaXRhbHxlbnwwfHx8fDE3MDQyOTUyMjJ8MA&amp;ixlib&#x3D;rb-4.0.3&amp;q&#x3D;80&amp;w&#x3D;1200 1200w,
                            https://images.unsplash.com/photo-1648545120788-6c0220422b27?crop&#x3D;entropy&amp;cs&#x3D;tinysrgb&amp;fit&#x3D;max&amp;fm&#x3D;jpg&amp;ixid&#x3D;M3wxMTc3M3wwfDF8c2VhcmNofDQ4fHxmbG93ZXJzJTIwZGlnaXRhbHxlbnwwfHx8fDE3MDQyOTUyMjJ8MA&amp;ixlib&#x3D;rb-4.0.3&amp;q&#x3D;80&amp;w&#x3D;2000 2000w"
                    sizes="(max-width: 1200px) 100vw, 1200px"
                    src="https://images.unsplash.com/photo-1648545120788-6c0220422b27?crop&#x3D;entropy&amp;cs&#x3D;tinysrgb&amp;fit&#x3D;max&amp;fm&#x3D;jpg&amp;ixid&#x3D;M3wxMTc3M3wwfDF8c2VhcmNofDQ4fHxmbG93ZXJzJTIwZGlnaXRhbHxlbnwwfHx8fDE3MDQyOTUyMjJ8MA&amp;ixlib&#x3D;rb-4.0.3&amp;q&#x3D;80&amp;w&#x3D;720"
                    alt="Playwright tips and tricks #2"
                >
            </figure>

        <div class="gh-card-wrapper">
            <header class="gh-card-header">
                <h3 class="gh-card-title">Playwright tips and tricks #2</h3>
            </header>

                    <div class="gh-card-excerpt">I've written a post about tips and tricks and it got a lot of love. So, I've decided to do another one.


1. How to handle an element that appears after full page load in playwright

One of those rare cases where an element will appear in DOM only after</div>

            <footer class="gh-card-footer">
                <span class="gh-card-author">Adrian Maciuc</span>
                <time class="gh-card-date" datetime="2024-01-08">Jan 8, 2024</time>
                    <script
    data-ghost-comment-count="65a43f06933cde00070f87d9"
    data-ghost-comment-count-empty=""
    data-ghost-comment-count-singular="comment"
    data-ghost-comment-count-plural="comments"
    data-ghost-comment-count-tag="span"
    data-ghost-comment-count-class-name="gh-card-comments"
    data-ghost-comment-count-autowrap="true"
>
</script>
            </footer>
        </div>
    </a>
</article>                            <article class="gh-card post featured">
    <a class="gh-card-link" href="/playwright-tips-and-tricks-1/">
            <figure class="gh-card-image">
                <img
                    srcset="https://images.unsplash.com/photo-1597484661643-2f5fef640dd1?crop&#x3D;entropy&amp;cs&#x3D;tinysrgb&amp;fit&#x3D;max&amp;fm&#x3D;jpg&amp;ixid&#x3D;M3wxMTc3M3wwfDF8c2VhcmNofDR8fHRvb2xzfGVufDB8fHx8MTcwMTk4NjgzMHww&amp;ixlib&#x3D;rb-4.0.3&amp;q&#x3D;80&amp;w&#x3D;300 300w,
                            https://images.unsplash.com/photo-1597484661643-2f5fef640dd1?crop&#x3D;entropy&amp;cs&#x3D;tinysrgb&amp;fit&#x3D;max&amp;fm&#x3D;jpg&amp;ixid&#x3D;M3wxMTc3M3wwfDF8c2VhcmNofDR8fHRvb2xzfGVufDB8fHx8MTcwMTk4NjgzMHww&amp;ixlib&#x3D;rb-4.0.3&amp;q&#x3D;80&amp;w&#x3D;720 720w,
                            https://images.unsplash.com/photo-1597484661643-2f5fef640dd1?crop&#x3D;entropy&amp;cs&#x3D;tinysrgb&amp;fit&#x3D;max&amp;fm&#x3D;jpg&amp;ixid&#x3D;M3wxMTc3M3wwfDF8c2VhcmNofDR8fHRvb2xzfGVufDB8fHx8MTcwMTk4NjgzMHww&amp;ixlib&#x3D;rb-4.0.3&amp;q&#x3D;80&amp;w&#x3D;960 960w,
                            https://images.unsplash.com/photo-1597484661643-2f5fef640dd1?crop&#x3D;entropy&amp;cs&#x3D;tinysrgb&amp;fit&#x3D;max&amp;fm&#x3D;jpg&amp;ixid&#x3D;M3wxMTc3M3wwfDF8c2VhcmNofDR8fHRvb2xzfGVufDB8fHx8MTcwMTk4NjgzMHww&amp;ixlib&#x3D;rb-4.0.3&amp;q&#x3D;80&amp;w&#x3D;1200 1200w,
                            https://images.unsplash.com/photo-1597484661643-2f5fef640dd1?crop&#x3D;entropy&amp;cs&#x3D;tinysrgb&amp;fit&#x3D;max&amp;fm&#x3D;jpg&amp;ixid&#x3D;M3wxMTc3M3wwfDF8c2VhcmNofDR8fHRvb2xzfGVufDB8fHx8MTcwMTk4NjgzMHww&amp;ixlib&#x3D;rb-4.0.3&amp;q&#x3D;80&amp;w&#x3D;2000 2000w"
                    sizes="(max-width: 1200px) 100vw, 1200px"
                    src="https://images.unsplash.com/photo-1597484661643-2f5fef640dd1?crop&#x3D;entropy&amp;cs&#x3D;tinysrgb&amp;fit&#x3D;max&amp;fm&#x3D;jpg&amp;ixid&#x3D;M3wxMTc3M3wwfDF8c2VhcmNofDR8fHRvb2xzfGVufDB8fHx8MTcwMTk4NjgzMHww&amp;ixlib&#x3D;rb-4.0.3&amp;q&#x3D;80&amp;w&#x3D;720"
                    alt="Playwright tips and tricks #1"
                >
            </figure>

        <div class="gh-card-wrapper">
            <header class="gh-card-header">
                <h3 class="gh-card-title">Playwright tips and tricks #1</h3>
            </header>

                    <div class="gh-card-excerpt">As you work with a framework you start to encounter various situations from which you can learn. Things that you find out are really important and are not that easy to discover just by reading the docs or following tutorials. Things that come with experience. I would like to share</div>

            <footer class="gh-card-footer">
                <span class="gh-card-author">Adrian Maciuc</span>
                <time class="gh-card-date" datetime="2023-12-08">Dec 8, 2023</time>
                    <script
    data-ghost-comment-count="65a43f06933cde00070f87d8"
    data-ghost-comment-count-empty=""
    data-ghost-comment-count-singular="comment"
    data-ghost-comment-count-plural="comments"
    data-ghost-comment-count-tag="span"
    data-ghost-comment-count-class-name="gh-card-comments"
    data-ghost-comment-count-autowrap="true"
>
</script>
            </footer>
        </div>
    </a>
</article>                            <article class="gh-card post featured">
    <a class="gh-card-link" href="/which-one-is-better-python-selenium-with-pom-or-cypress-without-page-object-model/">
            <figure class="gh-card-image">
                <img
                    srcset="https://images.unsplash.com/photo-1533284133567-0da9844151ce?crop&#x3D;entropy&amp;cs&#x3D;tinysrgb&amp;fit&#x3D;max&amp;fm&#x3D;jpg&amp;ixid&#x3D;M3wxMTc3M3wwfDF8c2VhcmNofDl8fHJhY2V8ZW58MHx8fHwxNjg3NjM2MjYzfDA&amp;ixlib&#x3D;rb-4.0.3&amp;q&#x3D;80&amp;w&#x3D;300 300w,
                            https://images.unsplash.com/photo-1533284133567-0da9844151ce?crop&#x3D;entropy&amp;cs&#x3D;tinysrgb&amp;fit&#x3D;max&amp;fm&#x3D;jpg&amp;ixid&#x3D;M3wxMTc3M3wwfDF8c2VhcmNofDl8fHJhY2V8ZW58MHx8fHwxNjg3NjM2MjYzfDA&amp;ixlib&#x3D;rb-4.0.3&amp;q&#x3D;80&amp;w&#x3D;720 720w,
                            https://images.unsplash.com/photo-1533284133567-0da9844151ce?crop&#x3D;entropy&amp;cs&#x3D;tinysrgb&amp;fit&#x3D;max&amp;fm&#x3D;jpg&amp;ixid&#x3D;M3wxMTc3M3wwfDF8c2VhcmNofDl8fHJhY2V8ZW58MHx8fHwxNjg3NjM2MjYzfDA&amp;ixlib&#x3D;rb-4.0.3&amp;q&#x3D;80&amp;w&#x3D;960 960w,
                            https://images.unsplash.com/photo-1533284133567-0da9844151ce?crop&#x3D;entropy&amp;cs&#x3D;tinysrgb&amp;fit&#x3D;max&amp;fm&#x3D;jpg&amp;ixid&#x3D;M3wxMTc3M3wwfDF8c2VhcmNofDl8fHJhY2V8ZW58MHx8fHwxNjg3NjM2MjYzfDA&amp;ixlib&#x3D;rb-4.0.3&amp;q&#x3D;80&amp;w&#x3D;1200 1200w,
                            https://images.unsplash.com/photo-1533284133567-0da9844151ce?crop&#x3D;entropy&amp;cs&#x3D;tinysrgb&amp;fit&#x3D;max&amp;fm&#x3D;jpg&amp;ixid&#x3D;M3wxMTc3M3wwfDF8c2VhcmNofDl8fHJhY2V8ZW58MHx8fHwxNjg3NjM2MjYzfDA&amp;ixlib&#x3D;rb-4.0.3&amp;q&#x3D;80&amp;w&#x3D;2000 2000w"
                    sizes="(max-width: 1200px) 100vw, 1200px"
                    src="https://images.unsplash.com/photo-1533284133567-0da9844151ce?crop&#x3D;entropy&amp;cs&#x3D;tinysrgb&amp;fit&#x3D;max&amp;fm&#x3D;jpg&amp;ixid&#x3D;M3wxMTc3M3wwfDF8c2VhcmNofDl8fHJhY2V8ZW58MHx8fHwxNjg3NjM2MjYzfDA&amp;ixlib&#x3D;rb-4.0.3&amp;q&#x3D;80&amp;w&#x3D;720"
                    alt="Which one is better? Selenium with POM or Cypress without POM"
                >
            </figure>

        <div class="gh-card-wrapper">
            <header class="gh-card-header">
                <h3 class="gh-card-title">Which one is better? Selenium with POM or Cypress without POM</h3>
            </header>

                    <div class="gh-card-excerpt">One of the best things about trying various frameworks and designs is that you have the possibility to directly see how it "feels" and have a better understanding of what suits best for your present or future projects.

I have done the Different Angle Challenge and I have created the</div>

            <footer class="gh-card-footer">
                <span class="gh-card-author">Adrian Maciuc</span>
                <time class="gh-card-date" datetime="2023-06-25">Jun 25, 2023</time>
                    <script
    data-ghost-comment-count="65a43f06933cde00070f87d6"
    data-ghost-comment-count-empty=""
    data-ghost-comment-count-singular="comment"
    data-ghost-comment-count-plural="comments"
    data-ghost-comment-count-tag="span"
    data-ghost-comment-count-class-name="gh-card-comments"
    data-ghost-comment-count-autowrap="true"
>
</script>
            </footer>
        </div>
    </a>
</article>                    </div>
                </div>
            </div>

                <div class="gh-comments gh-read-next gh-canvas">
            <section class="gh-pagehead">
                <h4 class="gh-pagehead-title">Comments (<script
    data-ghost-comment-count="65a43f06933cde00070f87d7"
    data-ghost-comment-count-empty="0"
    data-ghost-comment-count-singular=""
    data-ghost-comment-count-plural=""
    data-ghost-comment-count-tag="span"
    data-ghost-comment-count-class-name=""
    data-ghost-comment-count-autowrap="true"
>
</script>)</h3>
            </section>
            
        <script defer src="https://cdn.jsdelivr.net/ghost/comments-ui@~0.13/umd/comments-ui.min.js" data-locale="en" data-ghost-comments="https://blog.martioli.com/" data-api="https://blog.martioli.com/ghost/api/content/" data-admin="https://blog.martioli.com/ghost/" data-key="0781da3423523aaff7fa49a578" data-title="" data-count="false" data-post-id="65a43f06933cde00070f87d7" data-color-scheme="auto" data-avatar-saturation="60" data-accent-color="#00a388" data-comments-enabled="all" data-publication="Martioli" crossorigin="anonymous"></script>
    
        </div>
</main>

    <footer class="gh-foot gh-outer">
        <div class="gh-foot-inner gh-inner">
                <section class="gh-subscribe">
                    <h3 class="gh-subscribe-title">Subscribe to Martioli</h3>
                        <div class="gh-subscribe-description">Be the first to discover new tips and tricks about automation in software development</div>
                    <button class="gh-subscribe-btn gh-btn" data-portal="signup"><svg width="20" height="20" viewBox="0 0 20 20" fill="none" stroke="currentColor" xmlns="http://www.w3.org/2000/svg">
    <path d="M3.33332 3.33334H16.6667C17.5833 3.33334 18.3333 4.08334 18.3333 5.00001V15C18.3333 15.9167 17.5833 16.6667 16.6667 16.6667H3.33332C2.41666 16.6667 1.66666 15.9167 1.66666 15V5.00001C1.66666 4.08334 2.41666 3.33334 3.33332 3.33334Z" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M18.3333 5L9.99999 10.8333L1.66666 5" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
</svg> Subscribe now</button>
                </section>

            <nav class="gh-foot-menu">
                
            </nav>

            <div class="gh-copyright">
                    Developed with love by Adrian Maciuc © 2024
            </div>
        </div>
    </footer>

</div>

    <div class="pswp" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="pswp__bg"></div>

    <div class="pswp__scroll-wrap">
        <div class="pswp__container">
            <div class="pswp__item"></div>
            <div class="pswp__item"></div>
            <div class="pswp__item"></div>
        </div>

        <div class="pswp__ui pswp__ui--hidden">
            <div class="pswp__top-bar">
                <div class="pswp__counter"></div>

                <button class="pswp__button pswp__button--close" title="Close (Esc)"></button>
                <button class="pswp__button pswp__button--share" title="Share"></button>
                <button class="pswp__button pswp__button--fs" title="Toggle fullscreen"></button>
                <button class="pswp__button pswp__button--zoom" title="Zoom in/out"></button>

                <div class="pswp__preloader">
                    <div class="pswp__preloader__icn">
                        <div class="pswp__preloader__cut">
                            <div class="pswp__preloader__donut"></div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="pswp__share-modal pswp__share-modal--hidden pswp__single-tap">
                <div class="pswp__share-tooltip"></div>
            </div>

            <button class="pswp__button pswp__button--arrow--left" title="Previous (arrow left)"></button>
            <button class="pswp__button pswp__button--arrow--right" title="Next (arrow right)"></button>

            <div class="pswp__caption">
                <div class="pswp__caption__center"></div>
            </div>
        </div>
    </div>
</div>
<script src="/assets/built/main.min.js?v=d6f66aae46"></script>

<!-- Cloudflare Web Analytics --><script defer src='https://static.cloudflareinsights.com/beacon.min.js' data-cf-beacon='{"token": "51d762a9d9c04c0da84a9dc1039ae54f"}'></script><!-- End Cloudflare Web Analytics -->

<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.28.0/components/prism-core.min.js" integrity="sha512-9khQRAUBYEJDCDVP2yw3LRUQvjJ0Pjx0EShmaQjcHa6AXiOv6qHQu9lCAIR8O+/D8FtaCoJ2c0Tf9Xo7hYH01Q==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.28.0/plugins/autoloader/prism-autoloader.min.js" integrity="sha512-fTl/qcO1VgvKtOMApX2PdZzkziyr2stM65GYPLGuYMnuMm1z2JLJG6XVU7C/mR+E7xBUqCivykuhlzfqxXBXbg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

<script defer src="https://static.cloudflareinsights.com/beacon.min.js/vcd15cbe7772f49c399c6a5babf22c1241717689176015" integrity="sha512-ZpsOmlRQV6y907TI0dKBHq9Md29nnaEIPlkf84rnaERnq6zvWvPUqr2ft8M1aS28oN72PdrCzSjY4U6VaAw1EQ==" data-cf-beacon='{"rayId":"8db3f945e93d0ff5","version":"2024.10.4","r":1,"serverTiming":{"name":{"cfExtPri":true,"cfL4":true,"cfSpeedBrain":true,"cfCacheStatus":true}},"token":"26e104abc43a4f699676968ba16660fe","b":1}' crossorigin="anonymous"></script>
</body>

</html>
